qq号，密码暂时存在了Register.txt里，
先打开服务器，再进入登录界面使用，几个已经注册的账号：
QQ号：1 密码：123
QQ号：3 密码：12
QQ号：5 密码：1111
还可以另外注册

功能：
1.qq客户端登陆界面，好友列表界面，聊天界面，用户注册界面，服务器启动界面
其中好友列表，有三个卡片，每个卡片点击都能打开合上这一个列表，并且有好友上线会
头像变彩色，以及鼠标移动到好友那，id会变彩色高亮
2.点击注册，输入用户名和密码，（用Register.txt文件代替数据库进行注册验证），会
返回一个qq号并自动把注册信息写进文件里，这里简化只写了qq号和密码，每个信息占一行
3.点击登陆，把qq号码和密码作为一个对象流传送给数据库去验证，数据库不在本地，所以
委托一个类去验证,在服务器读取存放注册信息的文件，找到对应的qq号和密码就返回登录成功
4.登录界面，和qq好友列表的优化，鼠标移上去会高亮变色，以及实现了
用户上线头像变彩色，在登录时启动新的线程并提醒其他好友他上线了，在更新好友列表
5.完成好友一对一的聊天功能，用HashMap储存id和客户端传来的Socket
6.qq好友一对一聊天，双击事件得到好友qq号，启动聊天界面，点击发送，双方用户聊天框
均能收到消息，同步回显到聊天框，显示发送者id和时间以及发送内容
7.用新开线程的方法实现好友多对多的聊天，避免socket读取混乱，使得客户端同时
1号对2号聊天，1号对5号聊天，2号对5号聊天同时实现
8.还能改进的地方很多，在实现了基本聊天之后，其他的东西都会容易实现，
还可以把很多之前简化的地方扩写的...比如写进注册信息的还可以有性别头像等等，
界面也可以再改改的..


草稿笔记：
客户端：双击事件得到好友编号，启动聊天界面，点击发送按钮，想服务器发送message信息包
并把发送信息显示到聊天界面，用线程使用户聊天处于一直读取状态，都不到就等待，读取到了就显示在聊天界面
服务器：客户端与服务器连接的线程得到一个socket，接收客户端的信息，使服务器拿到多个客户端
再找到接收人的socket，通过接收人和服务器的socket连接，把信息包转发出去

一对一聊天的改进，把静态的socket改为线程，单独设一个类去管理一个账户的线程，
将所有的账号和对应的客户端线程放在HashMap里，在登陆时客户端连接服务器时根据socket启动线程
同时可以把聊天界面之前的线程取消掉，为了使得接收信息的人能一直收到服务器发来的信息
，同样是用HashMap储存自己和好友的id连接和QqChat实例，然后在已经处理好的线程里显示聊天

让服务器管理多个客户端，建立了线程和管理这个线程的类
一个新的账号登陆就开一个新线程
把读取服务器来消息的线程单开一个类，直接读取
所以qqChat不用再开线程了。。界面读取本身就不是很合理，所以删掉线程吧
每个账号的聊天界面进行区分，从Manage中取得 
把发送来的消息显示到对方对话框//因为聊天界面的一直读取的线程已经不用了

在线：一个用户登陆成功，就像服务器发送一个要求返回在线好友的包，服务器就
回送一个在线用户的信息包，客户端拿到信息报之后在处理好友在线

发过去之后的当前qq号线程已经启动，请求返回的包，也可以在线程里

新上线的人，去更新之前在线的列表的人：
让每一个人登陆后就通知其他在线的人

